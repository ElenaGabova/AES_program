#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <time.h>    
#define A_MAX 256

const uint8_t a[256] = {
	0x18, 0x23, 0xc6, 0xe8, 0x87, 0xb8, 0x01, 0x4f, 0x36, 0xa6, 0xd2, 0xf5, 0x79, 0x6f, 0x91, 0x52,
	0x60, 0xbc, 0x9b, 0x8e, 0xa3, 0x0c, 0x7b, 0x35, 0x1d, 0xe0, 0xd7, 0xc2, 0x2e, 0x4b, 0xfe, 0x57,
	0x15, 0x77, 0x37, 0xe5, 0x9f, 0xf0, 0x4a, 0xda, 0x58, 0xc9, 0x29, 0x0a, 0xb1, 0xa0, 0x6b, 0x85,
	0xbd, 0x5d, 0x10, 0xf4, 0xcb, 0x3e, 0x05, 0x67, 0xe4, 0x27, 0x41, 0x8b, 0xa7, 0x7d, 0x95, 0xd8,
	0xfb, 0xee, 0x7c, 0x66, 0xdd, 0x17, 0x47, 0x9e, 0xca, 0x2d, 0xbf, 0x07, 0xad, 0x5a, 0x83, 0x33,
	0x63, 0x02, 0xaa, 0x71, 0xc8, 0x19, 0x49, 0xd9, 0xf2, 0xe3, 0x5b, 0x88, 0x9a, 0x26, 0x32, 0xb0,
	0xe9, 0x0f, 0xd5, 0x80, 0xbe, 0xcd, 0x34, 0x48, 0xff, 0x7a, 0x90, 0x5f, 0x20, 0x68, 0x1a, 0xae,
	0xb4, 0x54, 0x93, 0x22, 0x64, 0xf1, 0x73, 0x12, 0x40, 0x08, 0xc3, 0xec, 0xdb, 0xa1, 0x8d, 0x3d,
	0x97, 0x00, 0xcf, 0x2b, 0x76, 0x82, 0xd6, 0x1b, 0xb5, 0xaf, 0x6a, 0x50, 0x45, 0xf3, 0x30, 0xef,
	0x3f, 0x55, 0xa2, 0xea, 0x65, 0xba, 0x2f, 0xc0, 0xde, 0x1c, 0xfd, 0x4d, 0x92, 0x75, 0x06, 0x8a,
	0xb2, 0xe6, 0x0e, 0x1f, 0x62, 0xd4, 0xa8, 0x96, 0xf9, 0xc5, 0x25, 0x59, 0x84, 0x72, 0x39, 0x4c,
	0x5e, 0x78, 0x38, 0x8c, 0xd1, 0xa5, 0xe2, 0x61, 0xb3, 0x21, 0x9c, 0x1e, 0x43, 0xc7, 0xfc, 0x04,
	0x51, 0x99, 0x6d, 0x0d, 0xfa, 0xdf, 0x7e, 0x24, 0x3b, 0xab, 0xce, 0x11, 0x8f, 0x4e, 0xb7, 0xeb,
	0x3c, 0x81, 0x94, 0xf7, 0xb9, 0x13, 0x2c, 0xd3, 0xe7, 0x6e, 0xc4, 0x03, 0x56, 0x44, 0x7f, 0xa9,
	0x2a, 0xbb, 0xc1, 0x53, 0xdc, 0x0b, 0x9d, 0x6c, 0x31, 0x74, 0xf6, 0x46, 0xac, 0x89, 0x14, 0xe1,
	0x16, 0x3a, 0x69, 0x09, 0x70, 0xb6, 0xd0, 0xed, 0xcc, 0x42, 0x98, 0xa4, 0x28, 0x5c, 0xf8, 0x86
};

int
main(int argc, char **argv)
{
	
	int r;
	int i, j;
	clock_t t;

  	t = clock();
  
	/*
	 * Демонстративный кусок ассемблерного кода, в котором вычисляется
	 * количество байт, занимаемых командами vmov (копирование регистра
	 * NEON или его части в регистр общего назначения) и b (безусловный
	 * переход по метке). Это значение будет использовано ниже.
	 */
	asm("start_c:\n\t"
	    "vmov.u8 %[r], d0[0]\n\t\t"
	    "b end_c\n"
	    "end_c:\n\t"
	    "movw r0, #:lower16:start_c\n\t" /* Загрузка адресов меток       */
	    "movt r0, #:upper16:start_c\n\t" /* start_c и end_c. ARM не      */
	    "movw r1, #:lower16:end_c\n\t"   /* поддерживает непосредственную*/
	    "movt r1, #:upper16:end_c\n\t"   /* загрузку 32-битных констант, */
	    "sub %[r], r1, r0\n\t"           /* поэтому приходится загружать */
	    : [r] "=&r" (r)                  /* 16-битными кусками.          */
	    :
	    :
	    );

	printf("end_c - start_c = %d\n", r);



	for (i = 0; i < A_MAX; i++) {
		
	for (j = 0; j < 7; j++) {
	/*
	 * Ассемблерная реализация аналога конструкции switch/case в C. По
	 * значению i находится байт из пула регистров NEON. Команда vldm
	 * последовательно загружает в регистры NEON значения, находящиеся по
	 * адресу, располагающегося в регистре общего назначения. Вообще
	 * говоря, поскольку A_MAX = 16, то 20команду загрузки следовало поменять
	 * на "vldm.64 %[a], {d0-d1}\n\t", но в этом коде демонстрируется, что
	 * vldm не может загрузить в более чем 16 регистров NEON, поэтому
	 * приходится загружать значения в два этапа.
	 */
	asm("vldm.64 %[a], {d0-d15}\n\t"  /* Загрузка в регистры NEON        */
	     "add %[a], %[a], #128\n\t"
	    "vldm.64 %[a], {d16-d31}\n\t" /* значений элементов массива a.   */

		  "mov r0, #6\n\t"              /* Число 6 — это количество байт,  */
			                          /* занимаемых командами vmov и b.  */

		  "adr r1, sw_start\n\t"        /* Вычисление адреса метки         */
			                          /* sw_start.                       */

		  "mla r0, %[i], r0, r1\n\t"    /* Вычисление адреса перехода по   */
			                          /* значению i. Команда mla — это   */
			                          /* команда вида multiply-          */
			                          /* accumulate, в r0 сохраняется    */
			                          /* результат вычислений            */
			                          /* %[i] * r0 + r1.                 */

		 "mov r15, r0\n"               /* Регистр r15 — это Program       */
			                          /* Counter, указатель на следующую */
			                          /* команду. Запись адреса в него   */
			                          /* приводит к немедленному переходу*/
			                          /* по этому адресу.                */
		 "sw_start:\n\t"
		 "vmov.u8 %[r], d0[0]\n\t"     /* Извлечение необходимого байта.  */
			                          /* Суффикс .u8 говорит о том, что  */
			                          /* регистр NEON (в данном случае   */
			                          /* это d0) рассматривается как     */
			                          /* вектор байт, а запись d0[0]     */
			                          /* говорит об извлечении первого   */
			                          /* элемента в этом векторе.        */
		    
		"b sw_end\n\t"
		"vmov.u8 %[r], d0[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d0[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d0[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d0[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d0[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d0[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d0[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d1[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d1[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d1[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d1[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d1[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d1[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d1[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d1[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d2[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d2[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d2[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d2[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d2[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d2[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d2[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d2[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d3[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d3[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d3[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d3[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d3[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d3[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d3[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d3[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d4[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d4[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d4[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d4[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d4[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d4[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d4[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d4[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d5[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d5[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d5[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d5[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d5[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d5[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d5[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d5[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d6[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d6[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d6[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d6[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d6[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d6[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d6[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d6[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d7[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d7[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d7[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d7[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d7[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d7[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d7[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d7[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d8[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d8[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d8[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d8[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d8[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d8[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d8[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d8[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d9[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d9[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d9[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d9[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d9[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d9[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d9[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d9[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d10[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d10[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d10[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d10[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d10[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d10[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d10[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d10[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d11[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d11[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d11[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d11[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d11[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d11[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d11[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d11[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d12[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d12[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d12[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d12[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d12[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d12[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d12[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d12[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d13[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d13[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d13[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d13[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d13[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d13[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d13[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d13[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d14[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d14[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d14[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d14[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d14[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d14[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d14[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d14[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d15[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d15[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d15[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d15[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d15[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d15[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d15[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d15[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d16[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d16[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d16[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d16[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d16[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d16[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d16[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d16[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d17[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d17[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d17[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d17[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d17[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d17[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d17[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d17[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d18[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d18[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d18[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d18[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d18[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d18[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d18[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d18[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d19[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d19[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d19[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d19[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d19[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d19[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d19[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d19[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d20[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d20[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d20[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d20[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d20[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d20[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d20[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d20[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d21[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d21[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d21[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d21[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d21[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d21[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d21[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d21[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d22[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d22[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d22[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d22[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d22[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d22[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d22[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d22[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d23[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d23[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d23[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d23[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d23[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d23[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d23[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d23[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d24[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d24[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d24[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d24[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d24[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d24[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d24[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d24[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d25[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d25[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d25[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d25[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d25[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d25[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d25[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d25[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d26[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d26[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d26[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d26[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d26[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d26[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d26[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d26[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d27[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d27[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d27[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d27[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d27[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d27[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d27[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d27[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d28[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d28[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d28[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d28[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d28[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d28[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d28[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d28[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d29[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d29[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d29[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d29[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d29[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d29[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d29[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d29[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d30[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d30[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d30[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d30[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d30[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d30[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d30[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d30[7]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d31[0]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d31[1]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d31[2]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d31[3]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d31[4]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d31[5]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d31[6]\n\t"
		"b sw_end\n\t"
		"vmov.u8 %[r], d31[7]\n\t"
		"b sw_end\n\t"
	    	 "sw_end: \n\t"
	    : [r] "=&r" (r)
	    : [a] "r" (a), [i] "r" (i)
	    : "r0", "r1"
	   );
	   }

		printf("Result for %d is %x\n", i, r);
	}

		t = clock() - t;

	printf ("\n Runtime (%f seconds).\n",
          ((double)t)/CLOCKS_PER_SEC);
	return EXIT_SUCCESS;
}
